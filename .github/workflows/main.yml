name: Build-Deploy
on:
  push:
    branches:
      - '*'
      - '*/*'
env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/soknadsmottaker:${{ github.sha }}
jobs:
  bygg-app:
    name: Bygg app/image, push til github
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/q0-pipeline' && github.ref != 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Define build environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ::set-env name=CI::true
          echo ::set-env name=IMAGE_REGISTRY::docker.pkg.github.com/$(echo ${GITHUB_REPOSITORY})
          echo ::set-env name=IMAGE_NAME::$(echo ${GITHUB_REPOSITORY##*/})
          echo ::set-env name=IMAGE_VERSION::$(echo ${GITHUB_WORKFLOW})-$(echo ${GITHUB_SHA})
      - name: Read/save .m2 cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - name: Bygg med maven
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn install --settings .m2/maven-settings.xml --file pom.xml
  deploy-qa:
    name: Deploy to preprod
    needs: bygg-app
    if: github.ref == 'refs/heads/kjore-pa-nais' || github.ref == 'refs/heads/q0-pipeline'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Bygg Docker image
        run: |
          docker build -t $IMAGE .
      - name: Push Docker image
        run: docker push $IMAGE
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: dev-fss
          RESOURCE: .nais/nais-preprod.yml
          VAR: app_version=${{ github.sha }}
#       env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          PRINT_PAYLOAD: true
#          CLUSTER: dev-sbs
#          RESOURCE: .nais/nais-q1.yml
  deploy-prod:
    name: Deploy to prod
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          DRY_RUN: true
          PRINT_PAYLOAD: true
          CLUSTER: prod-sbs
          RESOURCE: .nais/nais.yml
          VAR: app_version=${{ github.sha }}
